// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "alt+right",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "end",
    "command": "-cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+end",
    "command": "-cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "home",
    "command": "-cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+home",
    "command": "-cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+\\",
    "command": "-jupyter.selectCell",
    "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+alt+\\",
    "command": "editor.action.selectToBracket"
  },
  {
    "key": "ctrl+, ctrl+.",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+down",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+end",
    "command": "-cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+up",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+home",
    "command": "-cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+up",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+home",
    "command": "-cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "cursorBottomSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+end",
    "command": "-cursorBottomSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "block-travel.jumpDown",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+down",
    "command": "-block-travel.jumpDown",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+alt+down",
    "command": "workbench.action.terminal.resizePaneDown"
  },
  {
    "key": "ctrl+shift+alt+left",
    "command": "workbench.action.terminal.resizePaneLeft"
  },
  {
    "key": "ctrl+shift+alt+right",
    "command": "workbench.action.terminal.resizePaneRight"
  },
  {
    "key": "ctrl+alt+up",
    "command": "workbench.action.terminal.resizePaneUp"
  },
  {
    "key": "ctrl+alt+d",
    "command": "git.timeline.selectForCompare"
  },
  {
    "key": "tab",
    "command": "-tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+alt+]",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+[",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "ctrl+shift+alt+a",
    "command": "editor.emmet.action.balanceIn"
  }
]
